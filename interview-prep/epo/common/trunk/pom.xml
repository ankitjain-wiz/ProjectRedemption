<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.epo.cms.edfs.services</groupId>
		<artifactId>services-parent</artifactId>
		<version>1.0.6</version>
	</parent>

	<artifactId>services-common</artifactId>
	<version>1.4.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<scm>
		<connection>scm:svn:http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/common/trunk</connection>
		<developerConnection>scm:svn:http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/common/trunk</developerConnection>
		<url>http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/common/trunk</url>
	</scm>


	<ciManagement>
		<system>Parent for the different Support Services for the eDFS project.</system>
		<url>http://luu698d:8080/job/S2</url>
	</ciManagement>

	<properties>
		<spring.version>4.3.7.RELEASE</spring.version>
		<aspectj-version>1.8.9</aspectj-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.epo.cms.edfs.services</groupId>
			<artifactId>services-dossierpersistence</artifactId>
			<version>1.1.1-SNAPSHOT</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-jcs-core -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-jcs-core</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.8.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>

		</dependency>

		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security.kerberos</groupId>
			<artifactId>spring-security-kerberos-client</artifactId>
			<version>1.0.1.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.objenesis</groupId>
					<artifactId>objenesis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.objenesis</groupId>
					<artifactId>objenesis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- expose swagger doc in <contextRoot>/v2/api-docs -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>

		<!-- present swagger doc in swagger-ui <contextRoot>/swagger-ui.html -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>		

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
		</dependency>

		<!--  Json Jar Dependenies -->

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>

		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>

		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- AOP + AspectJ Dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj-version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj-version}</version>
		</dependency>		
		<!-- https://mvnrepository.com/artifact/io.rest-assured/json-path -->
		<dependency>
    			<groupId>io.rest-assured</groupId>
	    		<artifactId>json-path</artifactId>
		    	<version>3.0.0</version>
		</dependency>		
	</dependencies>


	<build>
		<plugins>

			<plugin> 
				<groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-javadoc-plugin</artifactId> 
				<version>2.9.1</version> 
				<executions> 
					<execution> 
						<phase>deploy</phase>
						<goals> 
							<goal>jar</goal> 
						</goals> 
						<configuration> 
							<additionalparam>-Xdoclint:none</additionalparam> 
						</configuration> 
					</execution> 
				</executions> 
			</plugin> 


			<!--
				Jenkins jobs (see http://confluence-p.internal.epo.org/display/ITRP0546/Configuring+EPO+Jenkins+plugin+for+Maven)
			-->
			<!--
			Run :
				mvn epojenkins:create-ci-jobs : to add jobs to jenkins and
				mvn epojenkins:remove-ci-jobs : to remove the jobs
				mvn epojenkins:help -Ddetail=true : to show the help
				
				With Jenkins authentication enabled, you'll need to specify username and password in the command line explicitly:
				mvn epojenkins:create-ci-jobs -Depojenkins.username=<your_userid> -Depojenkins.password=<your_password or Jenkins_API_token>
			-->

			<plugin>
				<groupId>org.epo.common.maven.plugins</groupId>
				<artifactId>epo-maven-jenkins-plugin</artifactId>
				<configuration>
					<jobLayoutDescriptor>basic</jobLayoutDescriptor>

					<!-- 
					ATTENTION
						This is set to FALSE on purpose to avoid the recreation of the defined jobs.
						These jobs have been changed after creation in jenkins to allows for configuration changes that can not be specified using the EPO plugin.
					-->
					<overwriteExistingJobs>false</overwriteExistingJobs>

					<jobLayoutDescriptorParameters>
						<projectDevelopers>pvbrabant@epo.org</projectDevelopers>

						<!-- Continuous Build -->
						<continuousBuildName>continuous-build-${project.artifactId}${branchExtension}</continuousBuildName> 
						<continuousBuildGoals>clean install</continuousBuildGoals>
						<continuousBuildCronTrigger>H/5 * * * *</continuousBuildCronTrigger>


						<!-- Nightly Build -->
						<nightlyBuildName>nightly-build-${project.artifactId}${branchExtension}</nightlyBuildName>
						<nightlyBuildGoals>clean install</nightlyBuildGoals>
						<nightlyBuildProfiles>-Pjacoco -Prun-its</nightlyBuildProfiles>
						<nightlyPollScm>true</nightlyPollScm>

						<!-- We do use Sonar.-->
						<sonar>true</sonar>

						<!-- ADS Deployment -->
						<ads>false</ads>


						<!-- Release Build -->
						<releaseBuildName>release-build-${project.artifactId}${branchExtension}</releaseBuildName>  
						<releaseBuildGoals>clean release:prepare-with-pom release:perform</releaseBuildGoals>
					</jobLayoutDescriptorParameters>
				</configuration>
			</plugin>			
		</plugins>
	</build>
	
	
</project>
