<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
        <groupId>org.epo.common.maven.poms</groupId>
        <artifactId>epo-corporate-pom</artifactId>
        <version>4.2.14</version>
	</parent>

	<groupId>org.epo.cms.edfs.services</groupId>
	<artifactId>services-parent</artifactId>
	<version>1.0.7-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Should be 6.0, but for 7.0 are for docs -->
		<javaee.api.version>7.0</javaee.api.version>
		<spring.version>4.3.7.RELEASE</spring.version>
		<logback.version>1.1.11</logback.version>
		<jcl.slf4j.version>1.7.25</jcl.slf4j.version>
		<jackson.version>2.6.7</jackson.version>
	</properties>

	<scm>
		<connection>scm:svn:http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/parent/trunk/</connection>
		<developerConnection>scm:svn:http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/parent/trunk/</developerConnection>
		<url>http://svn.internal.epo.org/repo/examination-formalities/cms/edfs/services/parent/trunk/</url>
	</scm>

	
	<ciManagement>
		<system>Parent for the different Support Services for the eDFS project.</system>
		<url>http://luu698d:8080/job/S2</url>
	</ciManagement>
	
	
	<dependencyManagement>
		<dependencies>
			<!-- External libraries -->

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.3</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<dependency>
				<groupId>com.tensorwrench</groupId>
				<artifactId>jackson-dataformat-hal-json</artifactId>
				<version>3.2.0</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- exlude common logging and bridge logging from JCL to SLF4j -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.hateoas</groupId>
				<artifactId>spring-hateoas</artifactId>
				<version>0.23.0.RELEASE</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${jcl.slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.mockrunner</groupId>
				<artifactId>mockrunner-servlet</artifactId>
				<version>1.1.2</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>1.6.6</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>1.6.6</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.6.6</version>
				<scope>test</scope>
			</dependency>

			<!-- swagger -->

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.6.1</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.6.1</version>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-web-api</artifactId>
				<version>${javaee.api.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<!-- 
						I do not want the execution of the default goal (enforce). 
						The EPO Corporate pom contains Maven enforcer plugin 1.4.1, which is interfering with assembly plugin.
						See https://issues.apache.org/jira/browse/MENFORCER-248
					-->
					<executions>
						<execution>
							<id>enforce</id>
							<phase>none</phase>
						</execution>
					</executions>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.4</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<executions>
						<execution>
							<id>copy resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>resources</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.shared</groupId>
							<artifactId>maven-filtering</artifactId>
							<version>1.3</version>
						</dependency>
					</dependencies>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<recompressZippedFiles>true</recompressZippedFiles>
						<attachClasses>true</attachClasses>
						<classesClassifier>classes</classesClassifier>
					</configuration>
				</plugin>
				
				<!--
					Jenkins jobs (see http://confluence-p.internal.epo.org/display/ITRP0546/Configuring+EPO+Jenkins+plugin+for+Maven)
				-->
				<!--
				Run :
					mvn epojenkins:create-ci-jobs : to add jobs to jenkins and
					mvn epojenkins:remove-ci-jobs : to remove the jobs
					mvn epojenkins:help -Ddetail=true : to show the help
					
					With Jenkins authentication enabled, you'll need to specify username and password in the command line explicitly:
					mvn epojenkins:create-ci-jobs -Depojenkins.username=<your_userid> -Depojenkins.password=<your_password or Jenkins_API_token>
				-->

				<plugin>
					<groupId>org.epo.common.maven.plugins</groupId>
					<artifactId>epo-maven-jenkins-plugin</artifactId>
					<configuration>
						<!-- No Nightly build. -->
						<jobLayoutDescriptor>release</jobLayoutDescriptor>
						<!-- 
							ATTENTION
								This is set to FALSE on purpose to avoid the recreation of the defined jobs.
								These jobs have been changed after creation in jenkins to allows for configuration changes that can not be specified using the EPO plugin.
						-->
						<overwriteExistingJobs>false</overwriteExistingJobs>

						<jobLayoutDescriptorParameters>
							<projectDevelopers>pvbrabant@epo.org</projectDevelopers>

							<continuousBuildGoals>clean deploy</continuousBuildGoals>

							<sonar>false</sonar>
							<ads>false</ads>

							<releaseBuildGoals>clean release:prepare-with-pom release:perform</releaseBuildGoals>

							<upgradeBuildName>upgrade-build-${project.artifactId}${branchExtension}</upgradeBuildName>
						</jobLayoutDescriptorParameters>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
